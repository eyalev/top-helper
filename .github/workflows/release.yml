name: Release

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary_name: top-helper
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            binary_name: top-helper
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            binary_name: top-helper

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation dependencies
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools

    - name: Install cross-compilation dependencies for ARM64
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Configure cross-compilation
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        echo "[target.aarch64-unknown-linux-gnu]" >> ~/.cargo/config.toml
        echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config.toml

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive
      run: |
        cd target/${{ matrix.target }}/release/
        tar -czf ../../../${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz ${{ matrix.binary_name }}

    - name: Upload to release
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}-${{ matrix.target }}
        path: ${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz

    - name: Upload release asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz
        asset_name: ${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz
        asset_content_type: application/gzip